@model SAGM.Models.AddUserViewModel
@{
    ViewData["Title"] = "Detalles de usuario:" + Model.Email;
}


<div>
    <div class="text-primary bg-secondary bg-opacity-25 header">
        <div class="row">
            <div class="col-11"><i class="fa fa-user"></i><strong> Detalle de usuario:  <b>@Html.DisplayFor(model => model.FullName)</b></strong></div>
            <div class="col-1 text-end"><a asp-action="Index"  title="Regresar" class="btn btn-sm btn-outline-success"><i class="fa-solid fa-arrow-rotate-left" title="Regresar"></i></a></div>
        </div>
    </div>

    <div class="contenido container-fluid">
        <div class="row">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-3">
                        <b>@Html.DisplayNameFor(model => model.Username):</b>
                    </div>
                    <div class="col-9">
                        @Html.DisplayFor(model => model.Email)
                    </div>
                    <div class="col-3">
                        <b>@Html.DisplayNameFor(model => model.FullName):</b>
                    </div>
                    <div class="col-9">
                        @Html.DisplayFor(model => model.FullName)
                    </div>
                    <div class="col-3">
                        <b>@Html.DisplayNameFor(model => model.Email):</b>
                    </div>
                    <div class="col-9">
                        @Html.DisplayFor(model => model.Email)
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <div class="col-3">
                        <b>@Html.DisplayNameFor(model => model.Address):</b>
                    </div>
                    <div class="col-9">
                        @Html.DisplayFor(model => model.Address)
                    </div>
                    <div class="col-3">
                        <b> @Html.DisplayNameFor(model => model.Document):</b>
                    </div>
                    <div class="col-9">
                        @Html.DisplayFor(model => model.Document)
                    </div>
                    <div class="col-3">
                        <b>@Html.DisplayNameFor(model => model.ImageFullPath):</b>
                    </div>
                    <div class="col-9">
                        <img src="@Model.ImageFullPath" style="width:100px; height:100px; border-radius:50px;" class="zoom" />
                    </div>
   
            </div>
          
        </div>
    </div>
</div>


<div class="contenido card mt-2">
    <div class="card-header text-primary bg-secondary bg-opacity-25">
        <i class="fa fa-user"></i><strong> Roles</strong>
        <a onclick="showInPopup('@Url.Action("AddRole", "Users", new { id = Model.Email}, Context.Request.Scheme)','Agregar rol','bg-primary')" class="btn btn-sm btn-outline-primary"><i class="fa-solid fa-plus-circle" title="Agregar rol"></i></a>
    </div>
    <div class="card-body">
        <div id="view-all">
            <input type="hidden" id="Result" name="Result" value="@ViewBag.Result" />
            @await Html.PartialAsync("_ViewAllRoles", Model)
        </div>
    </div>
</div>

<partial name="_AddOrEditDialog" />
<partial name="_DeleteDialog" />

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="~/js/showmodal.js"></script>
    <script type="text/javascript">
        var count = 0;
        $(document).ready(function () {
            if ($("#Result").val() == "true") {
                $.notify('@Html.Raw(ViewBag.Message)', "success", { globalPosition: "top center" });
            }
            else if ($("#Result").val() == "false") {
                $.notify('@Html.Raw(ViewBag.Message)', "error", { globalPosition: "top center" });
            }
            $('#TableRoles').DataTable(
                {
                    "language": {
                        "url": "/lib/datatables/Spanish.json"
                    },
                    "aLengthMenu": [
                        [10, 25, 50, 100, 200, -1],
                        [25, 50, 100, 200, "Todos"]
                    ],
                    "columnDefs": [{
                        "targets": [0, 2],
                        "orderable": true,
                        className: 'dt-body-center'
                    },
                    {
                        "targets": 1,
                        className: 'dt-body-left'
                    }],
                    "columns": [
                        { "data": "Name", "render": function (data) { count = count + 1; return count.toString(); } },
                        { "data": "Name" }
                    ]
                });
                //No usaremos el sc_deleteDialog
               sc_deleteDialog.openModal('deleteItem', true, 'btnYesDelete', '/Users/DeleteRole/', false);
        });


    </script>
           }
