@model SAGM.Models.OrderReceiptViewModel

@{
    ViewData["Title"] = "Recepción de " + Model.OrderName;
}

<style>
    .archive
    {
        font-size: small;
    }

    select, input[type="search"] {
        border: 1px solid gray;
        padding: .1em .1em;
        border-radius: .4em;
    }

    .liContainer {
        width: 100%;
        display: table-row;
    }

    .cell {
        display: table-cell;
        vertical-align: middle;
    }

    th {
        background-color: mediumseagreen;
        color: black;
    }

    tfoot
    {
        border:none !important;
    }

    .inputremision{
        width: 60px;
        border-radius: 5px;
        border: solid 1px silver;
    }
</style>

<form asp-action="Receive" autocomplete="off" method="post">
    <div>
        <div class="text-danger bg-secondary bg-opacity-25 header">
            <div class="row">
                <div class="col-11"><i class="fa fa-money-check-dollar"></i><strong> Recepción de orden de compra:  <b>@Html.DisplayFor(model => model.OrderName)</b></strong></div>
                <div class="col-1 text-end"><a asp-action="Index" title="Regresar" class="back"><i class="fa-solid fa-arrow-rotate-left" title="Regresar"></i></a></div>
            </div>
        </div>
        <input type="hidden" id="OrderId" name="OrderId" value="@Model.OrderId"/>

        <input type="hidden" id="Tax" value = "@Model.Tax" />
        <input type="hidden" id="Discount" value="0" />
        <input type="hidden" id="ReceiptDetails" name="ReceiptDetails" value="" />
        
        <div class="contenido container-fluid">
            <div class="row">
                <div class="col-6">
                    <dl class="row">
                        <dt class="col-sm-3">
                            @Html.DisplayNameFor(model => model.Supplier.SupplierNickName)
                        </dt>
                        <dd class="col-sm-9">
                            @Html.DisplayFor(model => model.Supplier.SupplierNickName)
                            <img src="@Model.Supplier.ImageFullPath" style="width:50px; height:50px; border-radius:50%;" class="zoom" />
                        </dd>
                        <dt class="col-sm-3">
                            OC
                        </dt>
                        <dd class="col-sm-9">
                            @Html.DisplayFor(model => model.OrderName)
                        </dd>
                        <dt class="col-sm-3">
                            OT
                        </dt>
                        <dd class="col-sm-9">
                            @if (Model.WorkOrderId != 0)
                            {
                                <a onclick="window.open('/WorkOrders/Details/@Model.WorkOrderId','_blank','location=yes,height=570,width=520,scrollbars=yes,status=yes')" href="#">@Html.DisplayFor(model => model.WorkOrderName)</a>
                            }
                            else
                            {
                                <a title='Enlazr OC' data-bs-toggle='modal' data-bs-target='#WorkOrdersModal' onclick='GetWorkOrders(@Model.OrderId)' class='btn btn-sm btn-outline-primary'><i title='Enlazar OC' class='fa fa-link'></i></a>
                            }
                        </dd>
                        <dt class="col-sm-3">
                            @Html.DisplayNameFor(model => model.BuyerName)
                        </dt>
                        <dd class="col-sm-9">  
                            @Html.DisplayFor(model => model.BuyerName)
                        </dd>
                        <dt class="col-sm-3">
                            @Html.DisplayNameFor(model => model.SellerName)
                        </dt>
                        <dd class="col-sm-9">
                            @Html.DisplayFor(model => model.SellerName)
                        </dd>
                    </dl>
                </div>
                <div class="col-6">
                    <dl class="row">
                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.Currency)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.Currency.Curr)
                        </dd>
                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.ExchangeRate)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.ExchangeRate)
                        </dd>

                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.SupplierQuote)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.SupplierQuote)
                        </dd>
                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.OrderStatus)
                        </dt>
                        <dd class="col-sm-5">
                            <div class="form-group">
                                <select asp-for="OrderStatusId" asp-items="Model.OrderStatus" class="form-control" id="OrderStatusId" onchange="changestatus(this.value);" ></select>
                                <span asp-validation-for="OrderStatusId" class="text-danger"></span>
                            </div>
                        </dd>
                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.ReceivedBy)
                        </dt>
                        <dd class="col-sm-5">
                            <div class="form-group">
                                <select asp-for="ReceivedBy" asp-items="Model.Receptors" class="form-control" id="ReceivedBy"></select>
                                <span asp-validation-for="ReceivedBy" class="text-danger"></span>
                            </div>
                        </dd>
                        <dd>
                            @if (ViewBag.DetailsCount > 0)
                            {
                                <a onclick="PrintReport('@Model.OrderId')" class="btn btn-primary"><i title='Imprimir OC' class='fa-solid fa-print'></i></a>
                            }
                        </dd>
                    
                    </dl>

                </div>
            </div>
        
        </div>

    </div>

    <div>
        <b><label class="text-danger" style="display:none;" id="msgpartidas" name="msgpartidas">Es necesario introducir las partidas a remisionar</label></b>
    </div>
    <div class="contenido card mt-2">
        <div class="card-header text-danger bg-secondary bg-opacity-25">
            <i class="fa fa-money-check-dollar"></i><strong> Partidas</strong>
           
        </div>
        <div class="card-body">
            <div id="view-all" >
                <input type="hidden" id="Result" name="Result" value="@ViewBag.Result" />
                @await Html.PartialAsync("_ViewAllOrderDetailsReceive.cshtml", Model)
            </div>
        </div>
    </div>
    <div class="modal fade in" id="WorkOrdersModal" tabindex="-1" role="dialog" data-bs-backdrop="static" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content g1">
                <div class="modal-header bg-blue-gradient" style="background-color:gainsboro;">
                    <div class="col-11">
                        <h5 class="modal-title text-danger" id="exampleModalLabel"><b>Selecciona una orden de trabajo</b></h5>
                    </div>
                    <button type="button" class="close" aria-label="Close" data-bs-dismiss="modal" onclick="DestroyTableWorkOrders()" style="border:none !important;background-color:gainsboro;">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="table-responsive">
                        <table id="TableWorkOrders" class="table table-responsive table-hover responsive display" style="width:100%; font-size:x-small;">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>OT</th>
                                    <th>QuoteId</th>
                                    <th>Cotización</th>
                                    <th>Cliente</th>
                                    <th>Usuario</th>
                                    <th>Comprador</th>
                                    <th>Fecha compromiso</th>
                                    <th>OC Cliente</th>
                                    <th>Subtotal</th>
                                    <th>Comentarios</th>
                                    <th>Acción</th>
                                    <th>Partidas</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col text-center">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="DestroyTableWorkOrders()"><i class="fa fa-ban"> </i>Cancelar</button>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="contenido card mt-2">
        <div class="row">
            <div class="form-floating">
                <textarea class="form-control" placeholder="Leave a comment here" id="ReceiptComments" style="height: 100px" name="ReceiptComments"> </textarea>
                <label for="floatingTextarea2" style="color: silver;">&nbsp;Comentarios</label>
            </div>
        </div>
    </div>
    <div class="contenido mt-2 text-center">
    <button type="submit" class="btn btn-outline-primary" onclick="return valida();">Vista previa&nbsp;<i class="fa-solid fa-list-check"></i></button>
    </div>



    <partial name="_AddOrEditDialog" />
</form>
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="~/js/showmodal.js"></script>

    <script type="text/javascript">
        var count = 0;
        var Popup, dataTable, detailid, orderid, quantity, received, strdetails;
            var rolex;
        var subototal = 0;

        $(document).ready(function () {

            orderid = $("#OrderId").val();

            if ($("#Result").val() == "true") {
                $.notify('@Html.Raw(ViewBag.Message)', "success", { globalPosition: "top center" });
             

            }
            else if ($("#Result").val() == "false") {
                $.notify('@Html.Raw(ViewBag.Message)', "error", { globalPosition: "top center" });
            }
            dataTable = $('#TableOrderDetails').DataTable(
                {
                    "ajax": {
                        url: '/Orders/GetOrderDetailsReceive/?id=' + $('#OrderId').val(),
                        type: "GET",
                        datatype: "json",
                        deferRender: true,
                        orderClasses: false,
                        serverSide: true
                    },
                    "language": {
                        "url": "/lib/datatables/Spanish.json"
                    },
                    "aLengthMenu": [
                        [25, 50, 100, 200, -1],
                        [25, 50, 100, 200, "Todos"]
                    ],
                    "rowId": "orderDetailId",
                    paging: false,
                    searching: false,
                    ordering: false,
                    info: false,
                    "footerCallback": function (row, data, start, end, display) {
                        var api = this.api(), data;

                        // Remove the formatting to get integer data for summation
                        var intVal = function (i) {
                            return typeof i === 'string' ?
                                i.replace(/[\$,]/g, '') * 1 :
                                typeof i === 'number' ?
                                    i : 0;
                        };

                        // Total over all pages
                        subtotal = api
                            .column(7)
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);

                        // Total over this page
                        pageTotal = api
                            .column(7, { page: 'current' })
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);

                        // Update footer
                        var htmlres = "<div><div class='row'><span style='text-align:right;'>Subtotal</span></div>";
                            htmlres += "<div class='row'><span style='text-align:right;'>Descuento</span></div> ";
                        htmlres += "<div class='row'><span style='text-align:right;'>IVA(" + $("#Tax").val().toString() + "%)</span></div>";
                            htmlres += "<div class='row'><span style='text-align:right;'>Total $ </span></div> </div>";
                        $(api.column(6).footer()).html(htmlres);

                        var iva = parseFloat($("#Tax").val())/100;
                        var ivaplus = parseFloat(1) + parseFloat(iva);
                        var descuento = parseFloat($("#Discount").val());
                        var IVA = (subtotal + descuento) * parseFloat(iva);
                        var Total = (subtotal + descuento) * parseFloat(ivaplus);
                        htmlres = "<div>" +
                            "<div class='row'><span style='text-align:right;'>" + parseFloat(subtotal, 8).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString() + "</span></div>" +
                            "<div class='row'><span style='text-align:right;'>" + descuento.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString() + "</span></div>" +
                            "<div class='row'><span style='text-align:right;'>" + IVA.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString() +  "</span></div>" +
                            "<div class='row'><span style='text-align:right;'>" + Total.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString() + "</span></div>" +
                            "</div>"
                        
                        $(api.column(7).footer()).html(htmlres);
                        //$(api.column(7).footer(1)).html("IVA $ " + parseFloat(total*.16, 8).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
                    },
                    "columnDefs": [
                        {
                            "targets": 0,
                            visible: false,
                            orderable: false
                        },
                        {
                            "targets": 1,
                            visible: true,
                            responsivePriority: 1,
                                orderable: false
                        },
                        {
                            "targets": 2,  //Cantidad
                            className: 'dt-body-center',
                            visible: true,
                            responsivePriority: 1,
                                orderable: false
                        },
                        {
                            "targets": [3, 4],//Unidad y Material
                            className: 'dt-body-left',
                            orderable: false,
                            responsivePriority: 3,
                                orderable: false
                        },
                        {
                            "targets": 5,  //Cantidad
                            className: 'dt-body-left',
                            visible: true,
                            responsivePriority: 1,
                            orderable: false
                        },
                        {
                            "targets": [6, 7],
                            className: 'dt-body-right',
                            responsivePriority: 2,
                            orderable: false
                        },
                        {
                            "targets": 8,
                            className: 'dt-body-center',
                            orderable: false,
                            responsivePriority: 3,
                            orderable: false
                        },
                        {
                            "targets": 9,
                            className: 'dt-body-center',
                            responsivePriority: 2,
                            orderable: false
                        },
                        {
                            "targets": [10,11],
                            className: 'dt-body-center',
                            orderable: false,
                            responsivePriority: 1
                        },
                        {
                            "targets": 12,
                            visible: false
                        },

                    ],
                    "columns": [
                            { "data": "orderDetailId" },
                            { "data": "orderDetailId", "render": function (data) { count = count + 1; detailid = data; return "<span>" + count.toString() + "</span>"; } },
                            { "data": "quantity", "render": function(data) { quantity = data; return data } },
                            { "data": "unit.unitName" },
                            { "data": "material.materialName" },
                            { "data": "description" },
                            { "data": "price", "render": $.fn.dataTable.render.number(',', '.', 2) },
                            { "data": "total", "render": $.fn.dataTable.render.number(',', '.', 2) },
                            { "data": "archivesNumber" },
                            { "data": "received", "render": function (data) { received = data; return data } },
                            { "data": "orderDetailId", 
                                "render": function (data) {


                                odid = data;
                                var result = "<div style='white-space: nowrap; text-align:center;'>";
                                result += "<input type='checkbox' id='chk_" + odid + "' onchange='fillquantities(" + quantity + "," + received + "," + odid +", this.checked)'  />"
                                result += "</div>"
                                   
                                return result;
                                }
                            
                            },
                        {
                            "data": "orderDetailId",
                            "render": function (data) {

                                var result = "<div style='white-space: nowrap; text-align:center;'>";
                                result += "<input type='text' class='inputremision' id='detail_" + odid + "' onchange='changequantity(" + quantity + "," + received + "," + odid + ", this.value)' />"
                                result += "</div>"

                                return result;
                            }

                        },
                            {
                                "data": "archivesChain",
                            "render": function (data) {
                                var result = "";

                                if (data.length > 0) {
                                    result += "<div ><table class='form-control'><tr class='card-header text-success bg-secondary bg-opacity-25'>"
                                    result += "<th>Archivos</th>";
                                    result += "<th>Acción</th>";

                                    var arrFiles = data.split("|");

                                    for (var i = 0; i < arrFiles.length; i++) {
                                        var file = arrFiles[i].split(",");
                                        var guid = file[0];
                                        var filename = file[1];
                                        var id = file[2];

                                        var filetype = filename.split(".");
                                        var type = filetype[0];

                                        result += "<tr><td class='archive'>" + filename + "<td>";
                                        result += "<a title='Descargar' class='btn btn-sm btn-outline-primary' href='#' onclick=\"downloadFile('" + guid + "','" + filename + "')\"> <i class='fa fa-download'></i><strong></a>";
                                        // result += "<a onclick=deleteArchive('" + id + "') class= 'btn btn-sm btn-outline-danger' > <i class='fa fa-trash' title = 'Eliminar archivo' > </i></a >";
                                        result += "<a onclick=\"showInPopup('/Archives/Delete?id=" + id + "','Eliminar\ archivo','bg-secondary')\"";
                                        result += "class='btn btn-sm btn-outline-danger'><i title='Eliminar archivo' class='fa fa-trash'></i></a>";
                             

                                        result += "</td></tr>";

                                    };
                                    result += "</table></div>";
                                }

                                return result;
                            }
                        }
                    ]
                });
        });
        function actualiza() {
            
                dataTable.ajax.reload();
            
            return false;
        };


        function changequantity(quantity, received, id, receiving) {

            var chkname = "";
            strdetails = "";


            if (parseFloat(received) + parseFloat(receiving) == parseFloat(quantity) )
            {
                chkname  = "#chk_" + id;
                $(chkname).prop("checked", true);
               
            }
            else {
                chkname = "#chk_" + id;
                $(chkname).prop("checked", false);
            }

            $('input.inputremision[type=text]').each(function () {
                if ($(this).val() != "") {

                    var orderdetailid = $(this).attr('id');
                    orderdetailid = orderdetailid.substring(7, orderdetailid.length)
                    strdetails += orderdetailid + "," + $(this).val() + "|";
                }
            });
            $("#ReceiptDetails").val(strdetails);
        }

        function fillquantities(quantity, received, id, checked) {
           
            var detailname = "#detail_" + id;
            strdetails = "";

            if (checked == true) {
                if (parseFloat(quantity) == parseFloat(received) || parseFloat(quantity) < parseFloat(received)) {
                    $(detailname).val(0);
                }
                else {
                    $(detailname).val(parseFloat(quantity) - parseFloat(received));
                }
            }
            else {
                $(detailname).val("");
            }

            $('input.inputremision[type=text]').each(function () {
                if ($(this).val() != "") {

                    var orderdetailid = $(this).attr('id');
                    orderdetailid = orderdetailid.substring(7, orderdetailid.length)
                    strdetails += orderdetailid + "," + $(this).val() + "|";
                }
            });
            $("#ReceiptDetails").val(strdetails);
        }


        function valida() {
            if ($("#ReceiptDetails").val() != "") {
                window.document.getElementById("partidas").style.display = "none";
                return true;
            }
            else {
                window.document.getElementById("msgpartidas").style.display = "block";
                $.notify('Es necesario introducir las partidas a remisionar', "error", { globalPosition: "top center" });
                return false;
            }
        }
    </script>



}