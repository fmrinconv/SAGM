@model IEnumerable<SAGM.Models.WorkLoad>


@{
    ViewData["Title"] = "Carga de trabajo";
}
<style>
    td.details-control {
        background: url('/../Images/details_open.png') no-repeat center center;
        cursor: pointer;
    }
    tr.shown td.details-control {
        background: url('/../Images/details_close.png') no-repeat center center;
    }
   select,  input[type="search"] {
        border: 1px solid gray;
        padding: .1em .1em;
        border-radius: .4em;
    }
    th{
        background-color:silver;
    }
    .text-warning{
        color: #f1a11e !important;
    }

    .opheader {
        background-color: orange !important;
        border-radius: 3px;
        font-weight: bold;
    }

    .opheader2 {
        background-color: white !important;
    }

    div.completed {
        color: green;
        font-weight: bold;
    }

    div.pending {
        color: orange;
        font-weight: bold;
    }

    div.nothing {
        color: red;
        font-weight: bold;
    }

    div.dt-container {
        width: 800px;
        margin: 0 auto;
    }
</style>
<div class="container-fluid">
    <div class="card mt-2">
        <div class="card-header text-warning bg-secondary bg-opacity-25">
            <table>
                <tr>
                    <td>
                        <i class="fa-regular fa-hourglass-half"></i><strong>&nbsp;Carga</strong>
                        <a onclick="showInPopup('@Url.Action("AddWorkOrder", "WorkOrders", new { id = "" }, Context.Request.Scheme)' , 'Crear Orden de trabajo @DateTime.Now.ToString(" yyyyMMdd")-XXX','bg-success')" class="btn btn-sm btn-outline-success" title="Crear Orden de trabajo"><i class="fa fa-plus-circle"></i></a>
                    </td>
                    <td>
                        <a onclick="ExportWorkLoad()" class="btn btn-sm btn-outline-primary"><i class="fa-solid fa-file-arrow-down"></i></a>
                    </td>
                </tr>
            </table>           
        </div>  
        <div class="card-body">
            <div id="view-all">
                <input type="hidden" id="Result" name="Result" value="@ViewBag.Result" />
                @await Html.PartialAsync("_ViewWorkLoad", Model)
            </div>
        </div>
    </div>
</div>

<partial name="_AddOrEditDialog" />
<partial name="_DeleteDialog" />
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="~/js/showmodal.js"></script>
    <script type="text/javascript">
        var count = 0;
        var dataTable;
        var quoteid;
        var quantity = 0;
        var workorderid;
        var WorkOrderDetailId;
        function parseJsonDate(jsonDateString) {
            return new Date(parseInt(jsonDateString.replace('/Date(', '')));
        }
        $(document).ready(function () {
            if ($("#Result").val() == "true") {
                $.notify('@Html.Raw(ViewBag.Message)', "success", { globalPosition: "top left" });
            }
            else {
                $.notify('@Html.Raw(ViewBag.Message)', "error", { globalPosition: "top left" });
            }
            dataTable = $('#TableWorkLoad').DataTable(
                {
                    initComplete: function () {
                        
                        this.api().columns(6).every(function () {
                            var column = this;
                            var select = $('<select class="opheader"><option value="" class="opheader" selected >Cliente</option></select>')
                                .appendTo($(column.header()).empty())
                                .on('change', function () {
                                    var val = $.fn.dataTable.util.escapeRegex(
                                        $(this).val()
                                    );
                                    $(this).className = this.options[this.selectedIndex].className;
                                    column
                                        .search(val ? '^' + val + '$' : '', true, false)
                                        .draw();
                                });

                            column.data().unique().sort().each(function (d, j) {
                                select.append('<option class="opheader2" value="' + d + '">' + d + '</option>')
                            });
                        });
                      
                    },
                    "ajax": {
                        "url": '/WorkOrders/GetWorkLoad',
                        "type": "GET",
                        "datatype": "json"
                    },
                    "language": {
                        "url": "/lib/datatables/Spanish.json"
                    },
                    "aLengthMenu": [
                        [25, 50, 100, 200, -1],
                        [25, 50, 100, 200, "Todos"]
                    ],
                    "rowId": "workOrderDetailId",
                    scrollX: true,
                    "columnDefs": [
                        {
                            "targets": 0,
                            className: 'dt-body-center dt-body-nowrap',
                            responsivePriority: 1
                        },
                        {
                            "targets": 1,
                            className: 'dt-body-left dt-body-nowrap',
                            responsivePriority: 1,
                            visible: false
                        },
                        {
                            "targets": [2,3],
                            className: 'dt-body-left dt-body-nowrap',
                            visible: false

                        },
                        {
                            "targets": [4, 5],
                            className: 'dt-body-left dt-body-nowrap',
                            responsivePriority: 1
                        },
                        {
                            "targets": 6,
                            className: 'dt-body-left dt-body-nowrap',
                            responsivePriority: 1,
                            orderable: false
                        },
                        {
                            "targets": 7,
                            className: 'dt-body-left dt-body-nowrap',
                            responsivePriority: 1
                        },
                        {
                            "targets": 8,
                            className: 'dt-body-center dt-body-nowrap',
                            responsivePriority: 4
                        },
                        {
                            "targets": 9,
                            className: 'dt-body-center dt-body-nowrap',
                            responsivePriority: 3
                        },
                        {
                            "targets": [10, 11],
                            className: 'dt-body-center dt-body-nowrap',
                            responsivePriority: 4
                        },
                        {
                            "targets": [12],
                            className: 'dt-body-right dt-body-nowrap',
                            responsivePriority: 1
                        },
                        {
                            "targets": 13,
                            className: 'dt-body-center dt-body-nowrap',
                            responsivePriority: 4
                        },
                        {
                            "targets": 15,
                            className: 'dt-body-left dt-body-nowrap',
                            responsivePriority: 1
                        },
                        {
                            "targets": 16,
                            className: 'dt-body-left dt-body-nowrap',
                            responsivePriority: 1
                        },
                        {
                            "targets": 21,
                            className: 'dt-body-center dt-body-nowrap',
                            responsivePriority: 4
                        },
                        {
                            "targets": [27,28],
                            className: 'dt-body-center dt-body-nowrap',
                            visible: false
                        }
                        ],
                    "columns": [
                        {
                            "className": 'details-control word-break:break-all',
                            "orderable": false,
                            "data": null,
                            "defaultContent": ''
                        },
                        {
                            "data": "workOrderDetailId",
                            "render":
                                function (data) {
                                    WorkOrderDetailId = data;
                                    count = count + 1;
                                    return count.toString();
                                }
                        },
                        {
                            "data": "workOrderId", "render":
                                function (data) {
                                    workorderid = data;
                                    return data;
                                }
                        },
                        {
                            "data": "quoteId", "render":
                                function (data) {
                                    quoteid = data;
                                    return data;
                                }
                        },
                        { "data": "workOrderDetailId", 
                                "render": function (data) { 
                                    wodid = data;
                                    var result = "<div style='white-space: nowrap;'>";
                                    result += "<a title='Copiar partida' onclick=\"CopyDetail('" + data + "')\" ";
                                    result += "class='btn btn-sm btn-outline-success'><i class='fa-solid fa-copy' title='Copiar partida'></i></a>";

                                result += "<a title='Editar partida' onclick=\"showInPopup('/WorkOrders/AddOrEditDetail?id=" + $("#WorkOrderId").val() + "&detailid=" + wodid + "','Editar\ partida','bg-warning')\"";
                                    result += "class='btn btn-sm btn-outline-warning'><i title='Editar partida' class='fa-solid fa-pencil-alt'></i></a>";

                                    result += "<a title='Agregar archivos' onclick=\"showInPopup('/Archives/AddArchive?entityid=" + data + "&Entity=WorkOrderDetail','Agregar\archivos','bg-primary')\"";
                                    result += "class='btn btn-sm btn-outline-primary'><i title='Agregar archivos' class='fa-solid fa-file-circle-plus'></i></a>";

                                    result += "<a title='Comentarios' onclick=\"showInPopup('/WorkOrders/AddOrEditDetailComment?id=" + data + "','Agregar\ comentario','bg-primary')\" ";
                                    result += "class='btn btn-sm btn-outline-secondary'><i class='fa-solid fa-comments' title='Comentarios'></i></a>";

                                    result += "<a title='Procesos' onclick=\"showInPopup('/WorkOrders/AddOrEditProcess?id=0&workOrderDetailId=" + data + "','Agregar\ proceso','bg-warning')\" ";
                                    result += "class='btn btn-sm btn-outline-warning' style='color:black;'>+<i class='fa-solid fa-gear' title='Procesos' style='color:orange;'></i></a>";

                                result += "<a title='Eliminar partida' onclick=\"showInPopup('/WorkOrders/DeleteWorkOrderDetail?id=" + data + "','Eliminar\ partida','bg-danger')\"";
                                    result += "class='btn btn-sm btn-outline-danger'><i title='Eliminar partida' class='fa-solid fa-trash'></i></a>";

                                    result += "</div>";
                                    
                                   
                                    return result;
                                }
                            
                                },
                        {
                            "data": "workOrderName", "render":
                                function (data) {
                                    var result = '<a href=/WorkOrders/Details/' + workorderid + "> " + data + "</a>";
                                    return result;
                                }
                        },
                        { "data": "customerNickName" },
                        { "data": "description" },
                        { "data": "quantity", "render": function (data) { 
                            quantity = data;
                            return quantity;
                            } 
                        },
                        { "data": "price", "render": $.fn.dataTable.render.number(',', '.', 2) },
                        { "data": "total", "render": $.fn.dataTable.render.number(',', '.', 2) },
                        { "data": "currency" },
                        { "data": "exchangeRate", "render": $.fn.dataTable.render.number(',', '.', 2) },
                        { "data": "finalUser" },
                        {
                            "data": "quoteName", "render":
                                function (data) {
                                    var result = '<a href=/Quotes/Details/' + quoteid + "> " + data + "</a>";
                                    return result;
                                }
                        },
                        { "data": "workOrderStatusName" },
                        { "data": "customerPO" },
                        { "data": "buyer" },
                        { "data": "seller" },
                        {
                            "data": "poDate",
                            "render":
                                function (data) {
                                    var date = new Date(data);
                                    var day = date.getDate();
                                    var month = date.getMonth() + 1;
                                    var year = date.getFullYear();
                                    return year + "-" + (month.toString().length > 1 ? month : "0" + month) + "-" + (day.toString().length > 1 ? day : "0" + day);
                                }
                        },
                        {
                            "data": "promiseDate",
                            "render":
                                function (data) {
                                    if (data != null) {
                                        var date = new Date(data);
                                        var day = date.getDate();
                                        var month = date.getMonth() + 1;
                                        var year = date.getFullYear();
                                        return year + "-" + (month.toString().length > 1 ? month : "0" + month) + "-" + (day.toString().length > 1 ? day : "0" + day);
                                    }
                                    else {
                                        return "";
                                    }

                                }
                        },
                        {
                            "data": "shippedDate",
                            "render":
                                function (data) {
                                    if (data != null) {
                                        var date = new Date(data);
                                        var day = date.getDate();
                                        var month = date.getMonth() + 1;
                                        var year = date.getFullYear();
                                        return year + "-" + (month.toString().length > 1 ? month : "0" + month) + "-" + (day.toString().length > 1 ? day : "0" + day);
                                    }
                                    else {
                                        return "";
                                    }

                                }
                        },
                        {
                            "data": "rawMaterial",
                            "render": function (data) {
                                if (data == quantity) {
                                    return "<div class='completed'>" + data + "</div>"
                                }
                                else if (data == 0) {
                                    return "<div class='nothing'>" + data + "</div>"
                                }
                                else {
                                    return "<div class='pending'>" + data + "</div>"
                                }
                            }
                        },
                        {
                            "data": "tt",
                            "render": function (data) {
                                if (data == quantity) {
                                    return "<div class='completed'>" + data + "</div>"
                                }
                                else if (data == 0) {
                                    return "<div class='nothing'>" + data + "</div>"
                                }
                                else {
                                    return "<div class='pending'>" + data + "</div>"
                                }
                            }
                        },
                        {
                            "data": "machined",
                            "render": function (data) {
                                if (data == quantity) {
                                    return "<div class='completed'>" + data + "</div>"
                                }
                                else if (data == 0) {
                                    return "<div class='nothing'>" + data + "</div>"
                                }
                                else {
                                    return "<div class='pending'>" + data + "</div>"
                                }
                            }
                        },
                        {
                            "data": "invoiced",
                            "render": function (data) {
                                if (data == quantity) {
                                    return "<div class='completed'>" + data + "</div>"
                                }
                                else if (data == 0) {
                                    return "<div class='nothing'>" + data + "</div>"
                                }
                                else {
                                    return "<div class='pending'>" + data + "</div>"
                                }
                            }
                        },
                        {
                            "data": "shipped",
                            "render": function (data) {
                                if (data == quantity) {
                                    return "<div class='completed'>" + data + "</div>"
                                }
                                else if (data == 0) {
                                    return "<div class='nothing'>" + data + "</div>"
                                }
                                else {
                                    return "<div class='pending'>" + data + "</div>"
                                }
                            }
                        },
                        { "data": "processArray" },
                        {
                            "data": "active",
                            "render":
                                function (data) {
                                    var result = "";
                                  
                                    if (data == true) {
                                        result += "<input type='checkbox' checked onclick='return false;' />";
                                    }
                                    else {
                                        result += "<input type='checkbox' onclick='return false;'/>";
                                    }
                                    return result;
                                }
                        }     
                    ]
                });


            $('#TableWorkLoad tbody').on('click', 'td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = dataTable.row(tr);

                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    // Open this row
                    row.child(format(row.data())).show();
                    tr.addClass('shown');

                }
            });
        });

        function format(d) {

            var table = '<table cellpadding = "12" cellspacing = "0" border = "0" style = "padding-left:50px;" ><tr style="background-color:orange;"><td><b>Maquina</b></td><td><b>Poceso</b></td><td><b>Cantidad</b></td><td><b>Unidad</b></td><td><b>Total</b></td></tr>';
            var rows = '';


            if (d.processArray != null) {
                var quantity = d.quantity;
                var total = 0;
                var formatter = new Intl.NumberFormat("es-MX", {
                    style: "decimal",
                    currency: "MXN",
                    minimumSignificantDigits: 3
                });
                
                var arrProcess = d.processArray.split("|");
                for (var i = 0; i < arrProcess.length; i++) {
                    var subtotal = 0;
                    var arrprocesspart = arrProcess[i].split("\\");
                    subtotal = parseFloat(quantity, 10).toFixed(2) * parseFloat(arrprocesspart[2], 10).toFixed(2);
                    total += subtotal;
                    rows = rows + "<tr><td>" + arrprocesspart[0] + "</td><td>" + arrprocesspart[1] + "</td><td>" + arrprocesspart[2] + "</td><td>" + arrprocesspart[3] + "</td><td>" + formatter.format(subtotal) + "</td></tr>";
                    
                }
                rows += "<tr style='background-color:silver;'><td colspan=4><b> Total </b></td><td>" + formatter.format(total) + "</td></tr>";
            }
            else {
                rows = rows + '<tr><td colspan=3>No hay procesos</td></tr>';
            }

            table = table + rows + '</table>';
            return table;
        }
        function downloadFile(guid, filename) {
            var popout = window.open("/WorkOrders/DownloadFile/?id=" + guid + "&filename=" + filename, "_blank");
            return false;
        }

        function ExportWorkLoad() {
            var popout = window.open("/WorkOrders/ExportWorkLoad/", "_blank");
            return false;
        }
        function CopyDetail(workOrderdetailId) {
            $.ajax({
                type: "Post",
                url: "/WorkOrders/CopyDetail/",
                dataType: 'json',
                data: { workOrderDetailId: workOrderdetailId },
                success: function (data) {

                    if (data = "success") {
                        $.notify("Partida copiada", {
                            globalPosition: "top center",
                            className: "success"
                        });

                        dataTable.ajax.reload()
                        //setTimeout('ejecuta(' + $("#IndexID").val() + ')', 2100);
                        //Popup.dialog('close');
                    }

                }
            });
        };


    </script>
    }




